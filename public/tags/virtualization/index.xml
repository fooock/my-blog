<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>virtualization on fooock blog</title><link>https://blog.fooock.com/tags/virtualization/</link><description>Recent content in virtualization on fooock blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 16 Oct 2019 19:46:11 +0200</lastBuildDate><atom:link href="https://blog.fooock.com/tags/virtualization/index.xml" rel="self" type="application/rss+xml"/><item><title>Manage libvirt with Python</title><link>https://blog.fooock.com/posts/1/manage-virtual-machines-with-libvirt-and-python/</link><pubDate>Wed, 16 Oct 2019 19:46:11 +0200</pubDate><guid>https://blog.fooock.com/posts/1/manage-virtual-machines-with-libvirt-and-python/</guid><description>If you don&amp;rsquo;t know what the libvirt is, then the official web page can clarify some things:
The libvirt project is a toolkit to manage virtualization platforms. It is used by many applications and support multiple hypervisors like KVM, QEMU, Xen, VMWare and others.
In this post I will show you how to interact with libvirt using Python and the KVM hypervisor, but first things first.
What do you need to start?</description></item></channel></rss>