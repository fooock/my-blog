<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kvm on fooock blog</title><link>https://blog.fooock.com/tags/kvm/</link><description>Recent content in kvm on fooock blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Oct 2019 20:17:03 +0200</lastBuildDate><atom:link href="https://blog.fooock.com/tags/kvm/index.xml" rel="self" type="application/rss+xml"/><item><title>How to build a virtualization solution?</title><link>https://blog.fooock.com/posts/2/how-to-build-a-virtualization-solution/</link><pubDate>Mon, 21 Oct 2019 20:17:03 +0200</pubDate><guid>https://blog.fooock.com/posts/2/how-to-build-a-virtualization-solution/</guid><description>This is a huge topic, but I will apply here the phrase divide and conquer. I will explain the main components of these solutions one by one, the topics around each one and the technologies that can be used. Remember that I&amp;rsquo;m not an expert on this topic, just a curious guy, and I can make mistakes. If so, leave me a comment please!, I will be happy to talk with you about this and exchange some opinions.</description></item><item><title>Manage libvirt with Python, TLS and SASL</title><link>https://blog.fooock.com/posts/1/manage-virtual-machines-with-libvirt-and-python/</link><pubDate>Wed, 16 Oct 2019 19:46:11 +0200</pubDate><guid>https://blog.fooock.com/posts/1/manage-virtual-machines-with-libvirt-and-python/</guid><description>If you don&amp;rsquo;t know what the libvirt is, then the official web page can clarify some things:
The libvirt project is a toolkit to manage virtualization platforms. It is used by many applications and support multiple hypervisors like KVM, QEMU, Xen, VMWare and others.
In this post I will show you how to interact with libvirt using Python and the KVM hypervisor, but first things first.
What do you need to start?</description></item></channel></rss>